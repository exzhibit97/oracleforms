--------------------------------------------------------
--  File created - Tuesday-June-04-2019   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence DEPARTMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PATRYK"."DEPARTMENT_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 22 NOCACHE  ORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence DOCTOR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PATRYK"."DOCTOR_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 161 NOCACHE  ORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence EMPLOYEE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PATRYK"."EMPLOYEE_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 21 NOCACHE  ORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence MEDICINE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PATRYK"."MEDICINE_SEQ"  MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence PATIENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PATRYK"."PATIENT_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 63 NOCACHE  ORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence PRESCRIPTION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PATRYK"."PRESCRIPTION_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 54 NOCACHE  ORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Sequence VISIT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "C##PATRYK"."VISIT_SEQ"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 49 NOCACHE  ORDER  NOCYCLE   ;
--------------------------------------------------------
--  DDL for Table DEPARTMENT
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."DEPARTMENT" 
   (	"DEPARTMENT_ID" NUMBER(*,0), 
	"DEPARTMENT_NAME" VARCHAR2(255 BYTE), 
	"DEPARTMENT_EMAIL" VARCHAR2(255 BYTE), 
	"DEPARTMENT_PHONE" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DOCTOR
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."DOCTOR" 
   (	"DOCTOR_ID" NUMBER(*,0), 
	"DOCTOR_FIRSTNAME" VARCHAR2(255 BYTE), 
	"DOCTOR_LASTNAME" VARCHAR2(255 BYTE), 
	"DOCTOR_PESEL" VARCHAR2(255 BYTE), 
	"GENDER_ID" NUMBER(*,0), 
	"DOCTOR_BIRTHDATE" DATE, 
	"DEPARTMENT_ID" NUMBER(*,0), 
	"DOCTOR_PHONE" VARCHAR2(255 BYTE), 
	"DOCTOR_EMAIL" VARCHAR2(255 BYTE), 
	"DOCTOR_STATUS" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EMPLOYEE
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."EMPLOYEE" 
   (	"EMPLOYEE_ID" NUMBER(*,0), 
	"EMPLOYEE_FIRSTNAME" VARCHAR2(255 BYTE), 
	"EMPLOYEE_LASTNAME" VARCHAR2(255 BYTE), 
	"EMPLOYEE_PESEL" NUMBER(*,0), 
	"GENDER_ID" NUMBER(*,0), 
	"ROLE_ID" NUMBER(*,0), 
	"EMPLOYEE_BIRTHDATE" DATE, 
	"EMPLOYEE_PHONE" VARCHAR2(255 BYTE), 
	"EMPLOYEE_EMAIL" VARCHAR2(255 BYTE), 
	"DEPARTMENT_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EMPLOYEEROLE
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."EMPLOYEEROLE" 
   (	"ROLE_ID" NUMBER(*,0), 
	"ROLE_NAME" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table GENDER
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."GENDER" 
   (	"GENDER_ID" NUMBER(*,0), 
	"GENDER_NAME" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table MEDICINE
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."MEDICINE" 
   (	"MEDICINE_ID" NUMBER(*,0), 
	"MEDICINE_NAME" VARCHAR2(255 BYTE), 
	"MEDICINE_PRICE" NUMBER(20,2), 
	"REPLACEMENT_FOR" NUMBER(38,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table MONTHLY_PRESC_AVG_PRICE
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."MONTHLY_PRESC_AVG_PRICE" 
   (	"ID" NUMBER, 
	"MONTHLY_SUM_PRICE" NUMBER(38,2), 
	"MONTHLY_VISITS" NUMBER(38,0), 
	"MONTHLY_AVG_PRICE" NUMBER(38,2), 
	"MONTH_NAME" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table MOST_PRESC_MEDICINE_MONTHLY
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."MOST_PRESC_MEDICINE_MONTHLY" 
   (	"ID" NUMBER, 
	"MONTH_NAME" VARCHAR2(20 BYTE), 
	"MEDICINE_NAME" VARCHAR2(20 BYTE), 
	"MEDICINE_AMOUNT" NUMBER(38,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ORIGINALS_REPLACEMENTS
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."ORIGINALS_REPLACEMENTS" 
   (	"ID" NUMBER, 
	"SUMMED_PRICE" NUMBER(38,2), 
	"MEDICINE_TYPE" VARCHAR2(25 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ORIGINALS_REPLACEMENTS_AMOUNT
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."ORIGINALS_REPLACEMENTS_AMOUNT" 
   (	"ID" VARCHAR2(20 BYTE), 
	"COLUMN1" VARCHAR2(30 BYTE), 
	"COLUMN2" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ORIGINALS_REPLACEMENTS_DIFF
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."ORIGINALS_REPLACEMENTS_DIFF" 
   (	"ID" NUMBER(10,0), 
	"MEDICINE_TYPE" VARCHAR2(50 BYTE), 
	"SUMMED_PRICE" NUMBER(20,2), 
	"SUMMARY" VARCHAR2(1000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PATIENT
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."PATIENT" 
   (	"PATIENT_ID" NUMBER(*,0), 
	"PATIENT_FIRSTNAME" VARCHAR2(255 BYTE), 
	"PATIENT_LASTNAME" VARCHAR2(255 BYTE), 
	"PATIENT_PESEL" NUMBER(*,0), 
	"GENDER_ID" NUMBER(*,0), 
	"PATIENT_BIRTHDATE" DATE, 
	"PATIENT_PHONE" VARCHAR2(255 BYTE), 
	"PATIENT_EMAIL" VARCHAR2(255 BYTE), 
	"PATIENT_STATUS" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PRESCRIPTION
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."PRESCRIPTION" 
   (	"PRESCRIPTION_ID" NUMBER(*,0), 
	"MEDICINE_ID" NUMBER(*,0), 
	"INSTRUCTIONS" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table STATUS
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."STATUS" 
   (	"STATUS_ID" NUMBER(*,0), 
	"STATUS_NAME" VARCHAR2(255 BYTE), 
	"STATUS_DESCRIPTION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TEMP_AGE
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."TEMP_AGE" 
   (	"AGE_GROUP_ID" NUMBER(10,0), 
	"GROUP_NAME" VARCHAR2(255 BYTE), 
	"GROUP_AMOUNT" NUMBER, 
	"GROUP_AMOUNT2" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VISIT
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."VISIT" 
   (	"VISIT_ID" NUMBER(*,0), 
	"VISIT_TYPE" NUMBER(*,0), 
	"REGISTER_DATE" DATE, 
	"SCHEDULED_DATE" DATE, 
	"STATUS_ID" NUMBER(*,0), 
	"RESCHEDULED_ID" NUMBER(*,0), 
	"PATIENT_ID" NUMBER(*,0), 
	"DOCTOR_ID" NUMBER(*,0), 
	"EMPLOYEE_ID" NUMBER(*,0), 
	"PRESCRIPTION_ID" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VISITTYPE
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."VISITTYPE" 
   (	"TYPE_ID" NUMBER(*,0), 
	"TYPE_NAME" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VISIT_SUMMARY
--------------------------------------------------------

  CREATE TABLE "C##PATRYK"."VISIT_SUMMARY" 
   (	"ID" NUMBER, 
	"MONTH_NAME" VARCHAR2(255 BYTE), 
	"VISITS_OVERALL" NUMBER(38,0), 
	"VISITS_SKPD_PATIENT" NUMBER(38,0), 
	"VISITS_SKPD_DOCTOR" NUMBER(38,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into C##PATRYK.DEPARTMENT
SET DEFINE OFF;
Insert into C##PATRYK.DEPARTMENT (DEPARTMENT_ID,DEPARTMENT_NAME,DEPARTMENT_EMAIL,DEPARTMENT_PHONE) values (21,'Choroby wewn?trzne','wewnetrzne@rejestracja.pl','909898787');
Insert into C##PATRYK.DEPARTMENT (DEPARTMENT_ID,DEPARTMENT_NAME,DEPARTMENT_EMAIL,DEPARTMENT_PHONE) values (1,'Onkologia','onkologia@rejestracja.pl','123123123');
Insert into C##PATRYK.DEPARTMENT (DEPARTMENT_ID,DEPARTMENT_NAME,DEPARTMENT_EMAIL,DEPARTMENT_PHONE) values (2,'Neurologia','neurologia@rejestracja.pl','321321321');
Insert into C##PATRYK.DEPARTMENT (DEPARTMENT_ID,DEPARTMENT_NAME,DEPARTMENT_EMAIL,DEPARTMENT_PHONE) values (3,'Pediatria','pediatria@rejestracja.pl','434535343');
Insert into C##PATRYK.DEPARTMENT (DEPARTMENT_ID,DEPARTMENT_NAME,DEPARTMENT_EMAIL,DEPARTMENT_PHONE) values (4,'Chirurgia','chirurgia@rejestracja.pl','5656565657');
Insert into C##PATRYK.DEPARTMENT (DEPARTMENT_ID,DEPARTMENT_NAME,DEPARTMENT_EMAIL,DEPARTMENT_PHONE) values (5,'Geriatria','geriatria@rejestracja.pl','5469890908');
Insert into C##PATRYK.DEPARTMENT (DEPARTMENT_ID,DEPARTMENT_NAME,DEPARTMENT_EMAIL,DEPARTMENT_PHONE) values (6,'Poloznictwo','poloznictwo@rejestracja.pl','777888999');
REM INSERTING into C##PATRYK.DOCTOR
SET DEFINE OFF;
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (125,'Jan','Kowalski','TextBox',1,to_date('10-OCT-70','DD-MON-RR'),1,'TextBox','TextBox',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (158,null,null,null,1,to_date('01-JUN-19','DD-MON-RR'),1,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (160,'Jacek','Placek','5465454645',1,to_date('04-JUN-19','DD-MON-RR'),1,'123657565','placek@wp.pl',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (124,'TextBox','TextBox','TextBox',1,to_date('10-OCT-10','DD-MON-RR'),1,'TextBox','TextBox',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (126,'Jan','Kowalski','1231231232',1,to_date('10-MAY-70','DD-MON-RR'),2,'123123123','asdasd',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (131,null,null,null,2,null,null,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (152,'John','Travolta','5565565654',1,to_date('28-NOV-69','DD-MON-RR'),4,'777888999','travolta@john.com',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (153,'Adam','Sandler','66545434789',1,to_date('20-MAY-19','DD-MON-RR'),1,'555444333','asdasdasd',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (154,null,null,null,1,to_date('20-MAY-19','DD-MON-RR'),1,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (2,'Morley','Shefton','2603204114',1,to_date('29-MAY-19','DD-MON-RR'),1,'126 399 6068','mshefton0@purevolume.com','Ratio: 0. Lekarz bez uprzedzenia przelozyl 0 wizyt(y) na 7 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (3,'Blake','Coorington','0515218138',2,null,2,'449 819 8399','bcoorington1@comsenz.com','Ratio: 0. Lekarz bez uprzedzenia przelozyl 0 wizyt(y) na 2 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (4,'Ash','Matevosian','7776120944',2,null,3,'434 967 0623','amatevosian2@infoseek.co.jp','Ratio: 0. Lekarz bez uprzedzenia przelozyl 0 wizyt(y) na 1 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (5,'Dore','Uttermare','1531424503',1,null,4,'986 699 4586','duttermare3@abc.net.au','Ratio: 0. Lekarz bez uprzedzenia przelozyl 0 wizyt(y) na 1 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (6,'Bethena','Welman','0574002065',1,null,5,'884 488 7422','bwelman4@epa.gov',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (7,'Thorn','Ludlamme','3958452620',2,null,6,'936 188 8108','tludlamme5@yelp.com','Ratio: .25. Lekarz bez uprzedzenia przelozyl 1 wizyt(y) na 4 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (1,'Adam','Nowak','78876343504',2,to_date('26-MAY-77','DD-MON-RR'),1,'444555666','adamnowak@doktor.com','Ratio: 0. Lekarz bez uprzedzenia przelozyl 0 wizyt(y) na 1 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (8,'Wini','Buchan','7037652016',2,null,3,'377 795 0607','wbuchan6@linkedin.com','Ratio: 0. Lekarz bez uprzedzenia przelozyl 0 wizyt(y) na 1 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (9,'Kurtis','Dunthorn','7370184080',2,null,4,'698 664 1969','kdunthorn7@51.la','Ratio: 0. Lekarz bez uprzedzenia przelozyl 0 wizyt(y) na 1 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (10,'Fanechka','Tonkes','8175038993',1,null,1,'378 592 5738','ftonkes8@nhs.uk',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (11,'Dyanna','Rosenbusch','4930225582',1,null,1,'877 161 7941','drosenbusch9@xing.com','Ratio: 0. Lekarz bez uprzedzenia przelozyl 0 wizyt(y) na 1 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (12,'Ximenes','Carnduff','9374919621',2,null,2,'517 221 9217','xcarnduffa@godaddy.com','Ratio: 0. Lekarz bez uprzedzenia przelozyl 0 wizyt(y) na 1 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (13,'Umberto','Dailey','0996588434',2,null,3,'273 763 5412','udaileyb@4shared.com',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (14,'Sharlene','Burkwood','8342828859',1,null,2,'548 389 5690','sburkwoodc@infoseek.co.jp',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (15,'Guillermo','Biagioni','0364680687',2,null,6,'924 779 1565','gbiagionid@go.com',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (16,'Gretchen','Lamort','4796077626',1,null,2,'902 470 3253','glamorte@umich.edu',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (17,'Hernando','Mc Meekin','1855398710',2,null,3,'565 746 7096','hmcmeekinf@msu.edu','Ratio: 0. Lekarz bez uprzedzenia przelozyl 0 wizyt(y) na 2 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (18,'Raymond','Yeude','9002254210',2,null,4,'206 609 5960','ryeudeg@hhs.gov',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (19,'Rosalyn','Rainbird','5520818754',1,null,5,'961 763 5355','rrainbirdh@census.gov','Ratio: 0. Lekarz bez uprzedzenia przelozyl 0 wizyt(y) na 1 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (20,'Gerrie','Cope','0106277715',2,null,5,'107 384 4049','gcopei@yahoo.co.jp',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (21,'Gerianne','Brasted','0030837855',1,null,6,'547 692 5021','gbrastedj@sciencedaily.com',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (22,'Andrew','Golota','4546763209',1,null,1,'521 359 5468','agolota0@purepower.com',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (123,null,null,null,null,null,null,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (155,null,null,null,1,to_date('22-MAY-19','DD-MON-RR'),1,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (156,'Kacper','Kowalik','9809090909',1,to_date('26-AUG-98','DD-MON-RR'),1,'881636941','kapko@kapko.kapko',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (135,null,null,null,1,to_date('13-FEB-79','DD-MON-RR'),2,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (128,'Adam','Niemiec','556575767',2,to_date('10-AUG-87','DD-MON-RR'),3,'666777888','niemiec@adam.pl',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (136,null,null,null,1,to_date('13-FEB-79','DD-MON-RR'),1,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (137,null,null,null,1,to_date('13-FEB-79','DD-MON-RR'),2,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (138,null,null,null,1,to_date('13-FEB-79','DD-MON-RR'),3,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (139,null,null,null,1,to_date('13-FEB-79','DD-MON-RR'),4,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (140,null,null,null,1,to_date('13-FEB-79','DD-MON-RR'),5,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (142,null,null,null,1,to_date('13-FEB-80','DD-MON-RR'),1,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (143,null,null,null,1,to_date('13-FEB-70','DD-MON-RR'),1,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (144,null,null,null,1,to_date('13-FEB-80','DD-MON-RR'),1,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (145,null,null,null,1,to_date('13-FEB-80','DD-MON-RR'),1,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (146,null,null,null,1,to_date('13-FEB-80','DD-MON-RR'),1,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (147,null,null,null,1,to_date('13-FEB-80','DD-MON-RR'),1,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (148,null,null,null,1,null,1,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (149,null,null,null,2,null,6,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (150,null,null,null,2,null,6,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (151,null,null,null,1,to_date('20-MAY-19','DD-MON-RR'),1,null,null,null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (159,'Andrzej','Bieda','98898784532',1,to_date('26-SEP-79','DD-MON-RR'),4,'123321435','bieda@wp.pl',null);
Insert into C##PATRYK.DOCTOR (DOCTOR_ID,DOCTOR_FIRSTNAME,DOCTOR_LASTNAME,DOCTOR_PESEL,GENDER_ID,DOCTOR_BIRTHDATE,DEPARTMENT_ID,DOCTOR_PHONE,DOCTOR_EMAIL,DOCTOR_STATUS) values (157,null,null,null,1,to_date('01-JUN-19','DD-MON-RR'),1,null,null,null);
REM INSERTING into C##PATRYK.EMPLOYEE
SET DEFINE OFF;
Insert into C##PATRYK.EMPLOYEE (EMPLOYEE_ID,EMPLOYEE_FIRSTNAME,EMPLOYEE_LASTNAME,EMPLOYEE_PESEL,GENDER_ID,ROLE_ID,EMPLOYEE_BIRTHDATE,EMPLOYEE_PHONE,EMPLOYEE_EMAIL,DEPARTMENT_ID) values (1,'Jan','Kaban',89032454578,2,1,null,'555666777','jankaban@wp.pl',1);
REM INSERTING into C##PATRYK.EMPLOYEEROLE
SET DEFINE OFF;
Insert into C##PATRYK.EMPLOYEEROLE (ROLE_ID,ROLE_NAME) values (1,'Rejestracja');
REM INSERTING into C##PATRYK.GENDER
SET DEFINE OFF;
Insert into C##PATRYK.GENDER (GENDER_ID,GENDER_NAME) values (2,'m??czyzna');
Insert into C##PATRYK.GENDER (GENDER_ID,GENDER_NAME) values (1,'kobieta');
REM INSERTING into C##PATRYK.MEDICINE
SET DEFINE OFF;
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (21,'Ibuprofen',20,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (61,'Acard',4.89,62);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (62,'Alka-Prim',9.85,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (63,'Nableran',75.69,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (64,'Reopemest',56.99,63);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (65,'Pabi-Acenocoumarol',45.69,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (66,'Sintrom',43.99,65);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (67,'Rabebir',69.99,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (68,'Rabecole',65.99,67);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (69,'Ubercet',15.99,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (70,'UFT-Caps',23.99,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (71,'Yantil',109.99,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (72,'Palexia',79.95,71);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (73,'Fablyn',23.59,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (74,'Falsigra',33.89,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (75,'Cabergoline',23.75,9);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (76,'Cachexan',15.69,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (77,'Kaldyum',56.99,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (78,'Ocatagam',260.99,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (79,'Flebogammadif',159.85,78);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (83,'BRAK',0,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (41,'APAP',8.99,21);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (42,'Alermed',24.99,1);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (1,'Clatra',32.99,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (3,'Duphostan',239.99,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (2,'Duomox',25.69,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (4,'Ibuprom',7.99,null);
Insert into C##PATRYK.MEDICINE (MEDICINE_ID,MEDICINE_NAME,MEDICINE_PRICE,REPLACEMENT_FOR) values (9,'Lacalut',10.99,null);
REM INSERTING into C##PATRYK.MONTHLY_PRESC_AVG_PRICE
SET DEFINE OFF;
Insert into C##PATRYK.MONTHLY_PRESC_AVG_PRICE (ID,MONTHLY_SUM_PRICE,MONTHLY_VISITS,MONTHLY_AVG_PRICE,MONTH_NAME) values (null,null,null,null,'01');
Insert into C##PATRYK.MONTHLY_PRESC_AVG_PRICE (ID,MONTHLY_SUM_PRICE,MONTHLY_VISITS,MONTHLY_AVG_PRICE,MONTH_NAME) values (null,75.69,1,75.69,'02');
Insert into C##PATRYK.MONTHLY_PRESC_AVG_PRICE (ID,MONTHLY_SUM_PRICE,MONTHLY_VISITS,MONTHLY_AVG_PRICE,MONTH_NAME) values (null,40.98,2,20.49,'03');
Insert into C##PATRYK.MONTHLY_PRESC_AVG_PRICE (ID,MONTHLY_SUM_PRICE,MONTHLY_VISITS,MONTHLY_AVG_PRICE,MONTH_NAME) values (null,8.99,1,8.99,'04');
Insert into C##PATRYK.MONTHLY_PRESC_AVG_PRICE (ID,MONTHLY_SUM_PRICE,MONTHLY_VISITS,MONTHLY_AVG_PRICE,MONTH_NAME) values (null,336.36,5,67.27,'05');
Insert into C##PATRYK.MONTHLY_PRESC_AVG_PRICE (ID,MONTHLY_SUM_PRICE,MONTHLY_VISITS,MONTHLY_AVG_PRICE,MONTH_NAME) values (null,32.99,1,32.99,'06');
Insert into C##PATRYK.MONTHLY_PRESC_AVG_PRICE (ID,MONTHLY_SUM_PRICE,MONTHLY_VISITS,MONTHLY_AVG_PRICE,MONTH_NAME) values (null,56.99,1,56.99,'07');
Insert into C##PATRYK.MONTHLY_PRESC_AVG_PRICE (ID,MONTHLY_SUM_PRICE,MONTHLY_VISITS,MONTHLY_AVG_PRICE,MONTH_NAME) values (null,null,null,null,'08');
Insert into C##PATRYK.MONTHLY_PRESC_AVG_PRICE (ID,MONTHLY_SUM_PRICE,MONTHLY_VISITS,MONTHLY_AVG_PRICE,MONTH_NAME) values (null,null,null,null,'09');
Insert into C##PATRYK.MONTHLY_PRESC_AVG_PRICE (ID,MONTHLY_SUM_PRICE,MONTHLY_VISITS,MONTHLY_AVG_PRICE,MONTH_NAME) values (null,null,null,null,'10');
Insert into C##PATRYK.MONTHLY_PRESC_AVG_PRICE (ID,MONTHLY_SUM_PRICE,MONTHLY_VISITS,MONTHLY_AVG_PRICE,MONTH_NAME) values (null,89.68,2,44.84,'11');
Insert into C##PATRYK.MONTHLY_PRESC_AVG_PRICE (ID,MONTHLY_SUM_PRICE,MONTHLY_VISITS,MONTHLY_AVG_PRICE,MONTH_NAME) values (null,109.99,1,109.99,'12');
REM INSERTING into C##PATRYK.MOST_PRESC_MEDICINE_MONTHLY
SET DEFINE OFF;
Insert into C##PATRYK.MOST_PRESC_MEDICINE_MONTHLY (ID,MONTH_NAME,MEDICINE_NAME,MEDICINE_AMOUNT) values (null,'01','.',0);
Insert into C##PATRYK.MOST_PRESC_MEDICINE_MONTHLY (ID,MONTH_NAME,MEDICINE_NAME,MEDICINE_AMOUNT) values (null,'02','Nableran',1);
Insert into C##PATRYK.MOST_PRESC_MEDICINE_MONTHLY (ID,MONTH_NAME,MEDICINE_NAME,MEDICINE_AMOUNT) values (null,'03','Ibuprom',1);
Insert into C##PATRYK.MOST_PRESC_MEDICINE_MONTHLY (ID,MONTH_NAME,MEDICINE_NAME,MEDICINE_AMOUNT) values (null,'04','APAP',1);
Insert into C##PATRYK.MOST_PRESC_MEDICINE_MONTHLY (ID,MONTH_NAME,MEDICINE_NAME,MEDICINE_AMOUNT) values (null,'05','Duomox',2);
Insert into C##PATRYK.MOST_PRESC_MEDICINE_MONTHLY (ID,MONTH_NAME,MEDICINE_NAME,MEDICINE_AMOUNT) values (null,'06','Clatra',1);
Insert into C##PATRYK.MOST_PRESC_MEDICINE_MONTHLY (ID,MONTH_NAME,MEDICINE_NAME,MEDICINE_AMOUNT) values (null,'07','Reopemest',1);
Insert into C##PATRYK.MOST_PRESC_MEDICINE_MONTHLY (ID,MONTH_NAME,MEDICINE_NAME,MEDICINE_AMOUNT) values (null,'08','.',0);
Insert into C##PATRYK.MOST_PRESC_MEDICINE_MONTHLY (ID,MONTH_NAME,MEDICINE_NAME,MEDICINE_AMOUNT) values (null,'09','.',0);
Insert into C##PATRYK.MOST_PRESC_MEDICINE_MONTHLY (ID,MONTH_NAME,MEDICINE_NAME,MEDICINE_AMOUNT) values (null,'10','.',0);
Insert into C##PATRYK.MOST_PRESC_MEDICINE_MONTHLY (ID,MONTH_NAME,MEDICINE_NAME,MEDICINE_AMOUNT) values (null,'11','Sintrom',1);
Insert into C##PATRYK.MOST_PRESC_MEDICINE_MONTHLY (ID,MONTH_NAME,MEDICINE_NAME,MEDICINE_AMOUNT) values (null,'12','Yantil',1);
REM INSERTING into C##PATRYK.ORIGINALS_REPLACEMENTS
SET DEFINE OFF;
Insert into C##PATRYK.ORIGINALS_REPLACEMENTS (ID,SUMMED_PRICE,MEDICINE_TYPE) values (1,317.35,'Replaceable originals');
Insert into C##PATRYK.ORIGINALS_REPLACEMENTS (ID,SUMMED_PRICE,MEDICINE_TYPE) values (2,134.96,'Replacement for originals');
Insert into C##PATRYK.ORIGINALS_REPLACEMENTS (ID,SUMMED_PRICE,MEDICINE_TYPE) values (3,299.36,'Irreplaceable originals');
REM INSERTING into C##PATRYK.ORIGINALS_REPLACEMENTS_AMOUNT
SET DEFINE OFF;
Insert into C##PATRYK.ORIGINALS_REPLACEMENTS_AMOUNT (ID,COLUMN1,COLUMN2) values ('1','Replaceable originals',6);
Insert into C##PATRYK.ORIGINALS_REPLACEMENTS_AMOUNT (ID,COLUMN1,COLUMN2) values ('2','Replacement for originals',4);
Insert into C##PATRYK.ORIGINALS_REPLACEMENTS_AMOUNT (ID,COLUMN1,COLUMN2) values ('3','Irreplaceable originals',4);
REM INSERTING into C##PATRYK.ORIGINALS_REPLACEMENTS_DIFF
SET DEFINE OFF;
Insert into C##PATRYK.ORIGINALS_REPLACEMENTS_DIFF (ID,MEDICINE_TYPE,SUMMED_PRICE,SUMMARY) values (1,'medicineWithReplacement',317.35,'Total price of prescribed originals that have replacement: 317.35. Total price of 
possible medicine cost for patients if doctors prescribed replacement instead of original medicine (only this case is investigated): 214.91. Summarized benefit (actually lesser expenditure) on bought medicine for patients calculated could have equal to: 102.44.');
Insert into C##PATRYK.ORIGINALS_REPLACEMENTS_DIFF (ID,MEDICINE_TYPE,SUMMED_PRICE,SUMMARY) values (2,'possibleMedicineReplacement',214.91,null);
REM INSERTING into C##PATRYK.PATIENT
SET DEFINE OFF;
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (62,'asd','asd',123,1,to_date('01-JUN-19','DD-MON-RR'),'123','asd','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (25,'Kamila','Gwizdala',99033009876,1,to_date('30-MAR-99','DD-MON-RR'),'565455434','gwizdala.kamila@gmail.com','Ratio: 0. Pacjent bez uprzedzenia przelozyl 0 wizyt(y) na 2 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (26,'Helena','Orlowska',49081545321,1,to_date('08-SEP-49','DD-MON-RR'),'666777454','orlowska.helena@onet.pl','Ratio: 0. Pacjent bez uprzedzenia przelozyl 0 wizyt(y) na 1 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (27,'Krystian','Ruchlewicz',97063006895,2,to_date('30-JUN-97','DD-MON-RR'),'564765456','ruchlewicz.krystian@wp.pl','Ratio: 0. Pacjent bez uprzedzenia przelozyl 0 wizyt(y) na 2 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (28,'Hatti','Cashmore',8863901848,2,to_date('21-AUG-89','DD-MON-RR'),'1466061739','hcashmore0@auda.org.au','Ratio: .5. Pacjent bez uprzedzenia przelozyl 1 wizyt(y) na 2 zarejestrowane - I stopien ostrzezenia!');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (29,'Candace','Whicher',2493237781,2,to_date('09-MAR-76','DD-MON-RR'),'6604106609','cwhicherg@xrea.com','Ratio: 0. Pacjent bez uprzedzenia przelozyl 0 wizyt(y) na 1 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (30,'Kamila','Davinet',8793632010,2,to_date('08-JAN-58','DD-MON-RR'),'8939004402','kdavinetw@cnbc.com','Ratio: 0. Pacjent bez uprzedzenia przelozyl 0 wizyt(y) na 1 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (31,'Rochelle','MacMorland',2397694638,1,to_date('07-NOV-60','DD-MON-RR'),'5139902645','rmacmorlandv@mozilla.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (32,'Ketti','Jenkin',9915299443,2,to_date('30-APR-71','DD-MON-RR'),'7348943986','kjenkinu@example.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (33,'Madelin','Smallwood',6969729478,2,to_date('05-APR-86','DD-MON-RR'),'4181879701','msmallwood1@multiply.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (34,'Jocko','Giovannelli',6104825818,1,to_date('13-NOV-68','DD-MON-RR'),'5472383179','jgiovannelli2@godaddy.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (35,'Sawyer','Beldan',8158753248,1,to_date('24-FEB-56','DD-MON-RR'),'6677591819','sbeldan3@marriott.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (36,'Jobi','Clowser',2258487153,2,to_date('31-JUL-62','DD-MON-RR'),'3252470896','jclowser4@opensource.org','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (37,'Gale','Despenser',6631688094,1,to_date('06-APR-97','DD-MON-RR'),'8129771477','gdespenser5@hud.gov','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (38,'Mac','Dowley',3222983054,1,to_date('04-JAN-90','DD-MON-RR'),'8629621248','mdowley6@dailymotion.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (39,'Cash','Towsie',2485527091,2,to_date('03-AUG-58','DD-MON-RR'),'7632809191','ctowsie7@wufoo.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (40,'Clarence','Preedy',7520456412,1,to_date('06-MAR-89','DD-MON-RR'),'9313469084','cpreedy8@flickr.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (41,'Mariette','Bergen',7740939552,1,to_date('04-OCT-69','DD-MON-RR'),'2061531952','mbergen9@nyu.edu','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (42,'Astrix','Widdicombe',7042173767,2,to_date('19-FEB-56','DD-MON-RR'),'6469251066','awiddicombea@jigsy.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (43,'Lalo','Mayhou',3941023608,2,to_date('10-FEB-83','DD-MON-RR'),'2648547991','lmayhoub@chron.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (44,'Ambrosi','Pidon',6114882237,1,to_date('28-JAN-69','DD-MON-RR'),'5384559322','apidonc@nyu.edu','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (45,'Albina','Turbern',6494663710,2,to_date('08-FEB-71','DD-MON-RR'),'7578735739','aturbernd@tiny.cc','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (46,'Jeffry','Warters',1742461301,1,to_date('07-DEC-91','DD-MON-RR'),'1995841140','jwarterse@census.gov','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (47,'Janeen','Coffee',2873312106,1,to_date('31-JUL-76','DD-MON-RR'),'2997670552','jcoffeef@nature.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (48,'Candace','Whicher',2493237781,2,to_date('09-MAR-76','DD-MON-RR'),'6604106609','cwhicherg@xrea.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (49,'Jolee','Avraham',2132050910,2,to_date('30-JUL-62','DD-MON-RR'),'6629388579','javrahamh@statcounter.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (50,'Rickey','Parmley',4502028991,1,to_date('07-MAY-89','DD-MON-RR'),'2537168737','rparmleyi@ucoz.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (51,'Pattie','Ballintyne',8172540493,2,to_date('05-DEC-67','DD-MON-RR'),'4495500869','pballintynej@hostgator.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (52,'Giacomo','Atto',6874509217,1,to_date('16-MAY-87','DD-MON-RR'),'1107094524','gattok@de.vu','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (53,'Cordell','Hutchens',3477190998,1,to_date('05-SEP-85','DD-MON-RR'),'2557420214','chutchensl@ted.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (54,'Cordy','MacDermid',4843236292,2,to_date('14-OCT-80','DD-MON-RR'),'5852065913','cmacdermidm@ca.gov','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (55,'Ferdinande','Brisland',6834297715,1,to_date('21-AUG-74','DD-MON-RR'),'3233209999','fbrislandn@hhs.gov','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (56,'Laverna','Gantzman',5275536844,1,to_date('14-APR-67','DD-MON-RR'),'3937619041','lgantzmano@squarespace.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (57,'Cross','Chown',6370553190,2,to_date('23-NOV-52','DD-MON-RR'),'7619902165','cchownp@123-reg.co.uk','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (58,'Alexis','Bloor',7676669650,2,to_date('11-JAN-01','DD-MON-RR'),'6133701711','abloorq@disqus.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (59,'Mycah','Gherarducci',7990701618,1,to_date('02-FEB-61','DD-MON-RR'),'8565732416','mgherarduccir@springer.com','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (60,'Katina','Brownlie',5733787589,2,to_date('10-JAN-64','DD-MON-RR'),'6074603140','kbrownlies@hhs.gov','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (61,'Orlando','Dalgarnocht',9809735766,2,to_date('23-MAR-78','DD-MON-RR'),'8866628600','odalgarnochtt@thetimes.co.uk','PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (1,'Patryk','Gwizdala',97030103874,2,to_date('01-MAR-97','DD-MON-RR'),'535333149','gwizdala.patryk@gmail.com','Ratio: .25. Pacjent bez uprzedzenia przelozyl 1 wizyt(y) na 4 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (2,'Mateusz','Krajnik',97020209908,2,to_date('23-FEB-97','DD-MON-RR'),'565454656','mateusz.krajnik@gmail.com','Ratio: .25. Pacjent bez uprzedzenia przelozyl 1 wizyt(y) na 4 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (24,'Jaroslaw','Zaniewicz',90093454678,2,to_date('22-JAN-90','DD-MON-RR'),'555666777','jaroslaw.zaniewicz@gmail.com','Ratio: 0. Pacjent bez uprzedzenia przelozyl 0 wizyt(y) na 3 zarejestrowane - akceptowalny poziom ');
Insert into C##PATRYK.PATIENT (PATIENT_ID,PATIENT_FIRSTNAME,PATIENT_LASTNAME,PATIENT_PESEL,GENDER_ID,PATIENT_BIRTHDATE,PATIENT_PHONE,PATIENT_EMAIL,PATIENT_STATUS) values (21,'Micha?','Martowicz',98034546561,2,to_date('23-FEB-98','DD-MON-RR'),'567890098','michal.martowicz@gmail.com','Ratio: 0. Pacjent bez uprzedzenia przelozyl 0 wizyt(y) na 3 zarejestrowane - akceptowalny poziom ');
REM INSERTING into C##PATRYK.PRESCRIPTION
SET DEFINE OFF;
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (28,21,'1 tabletka wieczorem');
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (29,41,'2 tabletki: 1 rano, 1 wieczorem');
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (30,42,'1 tabletka rano');
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (31,63,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (32,64,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (33,65,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (34,66,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (35,67,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (36,68,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (37,69,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (38,70,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (39,71,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (40,72,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (41,73,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (42,74,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (43,75,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (44,76,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (45,77,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (46,78,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (47,79,null);
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (22,1,'2 tabletki dziennie');
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (23,2,'2 tabletki rano');
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (24,2,'1 tabletka rano');
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (25,3,'1 tabletka wieczorem');
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (26,2,'2 tabletki');
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (27,4,'3 tabletki, co 3 godziny kazda');
Insert into C##PATRYK.PRESCRIPTION (PRESCRIPTION_ID,MEDICINE_ID,INSTRUCTIONS) values (53,1,'asdasdasd');
REM INSERTING into C##PATRYK.STATUS
SET DEFINE OFF;
Insert into C##PATRYK.STATUS (STATUS_ID,STATUS_NAME,STATUS_DESCRIPTION) values (1,'prawidlowo','Wizyta odbyla sie prawidlowo');
Insert into C##PATRYK.STATUS (STATUS_ID,STATUS_NAME,STATUS_DESCRIPTION) values (2,'pacjent_przelozyl','Pacjent przelozyl wizyt?');
Insert into C##PATRYK.STATUS (STATUS_ID,STATUS_NAME,STATUS_DESCRIPTION) values (3,'pacjent_nieobecny','Pacjent nie stawil si? na wizyte bez uprzedniego poinformowania');
Insert into C##PATRYK.STATUS (STATUS_ID,STATUS_NAME,STATUS_DESCRIPTION) values (4,'doktor_przelozyl','Wizyta przelozona z inicjatywy specjalisty');
Insert into C##PATRYK.STATUS (STATUS_ID,STATUS_NAME,STATUS_DESCRIPTION) values (5,'doktor_nieobecny','Wizyta przelozona z powodu nieobecnosci lekarza bez uprzedniego poinformowania pacjenta');
REM INSERTING into C##PATRYK.TEMP_AGE
SET DEFINE OFF;
Insert into C##PATRYK.TEMP_AGE (AGE_GROUP_ID,GROUP_NAME,GROUP_AMOUNT,GROUP_AMOUNT2) values (null,'Under18',null,null);
Insert into C##PATRYK.TEMP_AGE (AGE_GROUP_ID,GROUP_NAME,GROUP_AMOUNT,GROUP_AMOUNT2) values (null,'Ov18Un25',7,null);
Insert into C##PATRYK.TEMP_AGE (AGE_GROUP_ID,GROUP_NAME,GROUP_AMOUNT,GROUP_AMOUNT2) values (null,'Ov25Un40',11,null);
Insert into C##PATRYK.TEMP_AGE (AGE_GROUP_ID,GROUP_NAME,GROUP_AMOUNT,GROUP_AMOUNT2) values (null,'Ov40Un60',17,null);
Insert into C##PATRYK.TEMP_AGE (AGE_GROUP_ID,GROUP_NAME,GROUP_AMOUNT,GROUP_AMOUNT2) values (null,'Ov60',5,null);
REM INSERTING into C##PATRYK.VISIT
SET DEFINE OFF;
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (32,1,to_date('12-MAY-19','DD-MON-RR'),to_date('26-MAY-19','DD-MON-RR'),1,null,21,12,1,28);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (33,2,to_date('18-MAR-19','DD-MON-RR'),to_date('14-APR-19','DD-MON-RR'),1,null,21,9,1,29);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (34,2,to_date('18-JAN-19','DD-MON-RR'),to_date('25-JAN-19','DD-MON-RR'),2,35,25,7,1,null);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (35,2,to_date('25-JAN-19','DD-MON-RR'),to_date('05-FEB-19','DD-MON-RR'),1,null,25,7,1,31);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (36,1,to_date('21-JUL-19','DD-MON-RR'),to_date('28-JUL-19','DD-MON-RR'),1,null,26,5,1,32);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (37,1,to_date('17-NOV-19','DD-MON-RR'),to_date('24-NOV-19','DD-MON-RR'),4,39,27,2,1,null);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (38,2,to_date('10-OCT-19','DD-MON-RR'),to_date('24-OCT-19','DD-MON-RR'),3,40,28,17,1,null);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (39,1,to_date('24-NOV-19','DD-MON-RR'),to_date('28-NOV-19','DD-MON-RR'),1,null,27,2,1,33);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (40,2,to_date('24-OCT-19','DD-MON-RR'),to_date('01-NOV-19','DD-MON-RR'),1,null,28,17,1,34);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (41,1,to_date('06-MAR-19','DD-MON-RR'),to_date('11-MAR-19','DD-MON-RR'),1,null,29,11,1,22);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (42,1,to_date('01-DEC-19','DD-MON-RR'),to_date('15-DEC-19','DD-MON-RR'),1,null,30,19,1,39);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (1,1,to_date('05-MAY-19','DD-MON-RR'),to_date('12-MAY-19','DD-MON-RR'),2,2,1,2,1,null);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (2,1,to_date('12-MAY-19','DD-MON-RR'),to_date('19-MAY-19','DD-MON-RR'),3,3,1,2,1,null);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (3,2,to_date('19-MAY-19','DD-MON-RR'),to_date('26-MAY-19','DD-MON-RR'),1,null,1,2,1,24);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (27,2,to_date('21-MAY-19','DD-MON-RR'),to_date('24-MAY-19','DD-MON-RR'),5,30,24,7,1,null);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (28,1,to_date('25-MAY-19','DD-MON-RR'),to_date('26-MAY-19','DD-MON-RR'),1,null,2,3,1,25);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (29,1,to_date('12-MAY-19','DD-MON-RR'),to_date('19-MAY-19','DD-MON-RR'),1,null,2,2,1,30);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (30,2,to_date('24-MAY-19','DD-MON-RR'),to_date('26-MAY-19','DD-MON-RR'),1,null,24,7,1,23);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (31,1,to_date('18-FEB-19','DD-MON-RR'),to_date('11-MAR-19','DD-MON-RR'),1,null,24,8,1,27);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (25,1,to_date('05-MAY-19','DD-MON-RR'),to_date('12-MAY-19','DD-MON-RR'),4,29,2,2,1,null);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (24,1,to_date('05-JAN-18','DD-MON-RR'),to_date('28-FEB-18','DD-MON-RR'),1,null,21,4,1,26);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (22,1,to_date('12-MAY-19','DD-MON-RR'),to_date('25-MAY-19','DD-MON-RR'),3,28,2,3,1,null);
Insert into C##PATRYK.VISIT (VISIT_ID,VISIT_TYPE,REGISTER_DATE,SCHEDULED_DATE,STATUS_ID,RESCHEDULED_ID,PATIENT_ID,DOCTOR_ID,EMPLOYEE_ID,PRESCRIPTION_ID) values (48,1,to_date('01-JUN-19','DD-MON-RR'),to_date('01-JUN-19','DD-MON-RR'),1,null,1,1,1,53);
REM INSERTING into C##PATRYK.VISITTYPE
SET DEFINE OFF;
Insert into C##PATRYK.VISITTYPE (TYPE_ID,TYPE_NAME) values (1,'NFZ');
Insert into C##PATRYK.VISITTYPE (TYPE_ID,TYPE_NAME) values (2,'Prywatna');
REM INSERTING into C##PATRYK.VISIT_SUMMARY
SET DEFINE OFF;
Insert into C##PATRYK.VISIT_SUMMARY (ID,MONTH_NAME,VISITS_OVERALL,VISITS_SKPD_PATIENT,VISITS_SKPD_DOCTOR) values (null,'01',2,1,null);
Insert into C##PATRYK.VISIT_SUMMARY (ID,MONTH_NAME,VISITS_OVERALL,VISITS_SKPD_PATIENT,VISITS_SKPD_DOCTOR) values (null,'02',1,null,null);
Insert into C##PATRYK.VISIT_SUMMARY (ID,MONTH_NAME,VISITS_OVERALL,VISITS_SKPD_PATIENT,VISITS_SKPD_DOCTOR) values (null,'03',2,null,null);
Insert into C##PATRYK.VISIT_SUMMARY (ID,MONTH_NAME,VISITS_OVERALL,VISITS_SKPD_PATIENT,VISITS_SKPD_DOCTOR) values (null,'04',null,null,null);
Insert into C##PATRYK.VISIT_SUMMARY (ID,MONTH_NAME,VISITS_OVERALL,VISITS_SKPD_PATIENT,VISITS_SKPD_DOCTOR) values (null,'05',10,3,2);
Insert into C##PATRYK.VISIT_SUMMARY (ID,MONTH_NAME,VISITS_OVERALL,VISITS_SKPD_PATIENT,VISITS_SKPD_DOCTOR) values (null,'06',1,null,null);
Insert into C##PATRYK.VISIT_SUMMARY (ID,MONTH_NAME,VISITS_OVERALL,VISITS_SKPD_PATIENT,VISITS_SKPD_DOCTOR) values (null,'07',1,null,null);
Insert into C##PATRYK.VISIT_SUMMARY (ID,MONTH_NAME,VISITS_OVERALL,VISITS_SKPD_PATIENT,VISITS_SKPD_DOCTOR) values (null,'08',null,null,null);
Insert into C##PATRYK.VISIT_SUMMARY (ID,MONTH_NAME,VISITS_OVERALL,VISITS_SKPD_PATIENT,VISITS_SKPD_DOCTOR) values (null,'09',null,null,null);
Insert into C##PATRYK.VISIT_SUMMARY (ID,MONTH_NAME,VISITS_OVERALL,VISITS_SKPD_PATIENT,VISITS_SKPD_DOCTOR) values (null,'10',2,1,null);
Insert into C##PATRYK.VISIT_SUMMARY (ID,MONTH_NAME,VISITS_OVERALL,VISITS_SKPD_PATIENT,VISITS_SKPD_DOCTOR) values (null,'11',2,null,1);
Insert into C##PATRYK.VISIT_SUMMARY (ID,MONTH_NAME,VISITS_OVERALL,VISITS_SKPD_PATIENT,VISITS_SKPD_DOCTOR) values (null,'12',1,null,null);
--------------------------------------------------------
--  DDL for Trigger CREATE_DEPARTMENT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##PATRYK"."CREATE_DEPARTMENT" 
    BEFORE INSERT ON DEPARTMENT
    FOR EACH ROW
        BEGIN
          :new.DEPARTMENT_ID:=DEPARTMENT_SEQ.nextval;
        END;
/
ALTER TRIGGER "C##PATRYK"."CREATE_DEPARTMENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CREATE_DOCTOR
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##PATRYK"."CREATE_DOCTOR" 
BEFORE INSERT ON DOCTOR 
FOR EACH ROW
BEGIN
:new.DOCTOR_ID:=DOCTOR_SEQ.nextval;
  NULL;
END;
/
ALTER TRIGGER "C##PATRYK"."CREATE_DOCTOR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CREATE_EMPLOYEE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##PATRYK"."CREATE_EMPLOYEE" 
    BEFORE INSERT ON EMPLOYEE
    FOR EACH ROW
        BEGIN
          :new.EMPLOYEE_ID:=EMPLOYEE_SEQ.nextval;
        END;
/
ALTER TRIGGER "C##PATRYK"."CREATE_EMPLOYEE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CREATE_MEDICINE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##PATRYK"."CREATE_MEDICINE" 
    BEFORE INSERT ON MEDICINE
    FOR EACH ROW
        BEGIN
          :new.MEDICINE_ID:=MEDICINE_SEQ.nextval;
        END;
/
ALTER TRIGGER "C##PATRYK"."CREATE_MEDICINE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CREATE_PATIENT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##PATRYK"."CREATE_PATIENT" 
    BEFORE INSERT ON PATIENT
    FOR EACH ROW
        BEGIN
          :new.PATIENT_ID:=PATIENT_SEQ.nextval;
        END;
/
ALTER TRIGGER "C##PATRYK"."CREATE_PATIENT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CREATE_PRESCRIPTION
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##PATRYK"."CREATE_PRESCRIPTION" 
    BEFORE INSERT ON PRESCRIPTION
    FOR EACH ROW
        BEGIN
          :new.PRESCRIPTION_ID:=PRESCRIPTION_SEQ.nextval;
        END;
/
ALTER TRIGGER "C##PATRYK"."CREATE_PRESCRIPTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CREATE_VISIT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "C##PATRYK"."CREATE_VISIT" 
    BEFORE INSERT ON VISIT
    FOR EACH ROW
        BEGIN
          :new.VISIT_ID:=VISIT_SEQ.nextval;
        END;
/
ALTER TRIGGER "C##PATRYK"."CREATE_VISIT" ENABLE;
--------------------------------------------------------
--  DDL for Procedure AGE_CHART
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."AGE_CHART" 
(
  AGEU18 OUT NUMBER 
, AGEU25 OUT NUMBER
, AGEU40 OUT NUMBER
, AGEU60 OUT NUMBER
, AGEO60 OUT NUMBER
) AS
    L_FINAL_RESULT NUMBER(38,2);
   age number := 0;
   age18 number := 0;
   age25 number := 0;
   age40 number := 0;
   age60 number := 0;
   age60pl number := 0;
   l_cnt number;
BEGIN
EXECUTE IMMEDIATE 'DELETE FROM TEMP_AGE';
    L_FINAL_RESULT:= fill_age_grups();
    if (L_FINAL_RESULT = 1) THEN --wynik funkcji month_nums_fill() jest przekazywany do zmiennej i determinuje wykonanie dalszych operacji     
    FOR patients in (select patient_id from patient) LOOP
        select TRUNC(MONTHS_BETWEEN(SYSDATE, patient_birthdate))/12 into age from patient where patient_id = patients.patient_id;
        if (age <= 18) then
            age18 := age18 +1;
        elsif (age >18 AND  age <=25) then
            age25 := age25 +1;
        elsif (age >25 AND  age <=40) then
            age40 := age40 +1;
        elsif (age >40 AND  age <=60) then
            age60 := age60 +1;
        elsif (age >60) then
            age60pl := age60pl +1;
        
        else
            dbms_output.put_line('problem');
        END IF;
    END LOOP;
    AGEU18 := age18;
    AGEU25 := age25;
    AGEU40 := age40;
    AGEU60 := age60;
    AGEO60 := age60pl;
    
--    SELECT COUNT(*)
--        INTO l_cnt
--        FROM user_tables
--        WHERE table_name = 'TEMP_AGE'; 
--      IF( l_cnt > 0 )
--      THEN
--         dbms_output.put_line('git');
         update temp_age set group_amount = AGEU18 where group_name = 'Over18';
         update temp_age set group_amount = AGEU25 where group_name = 'Ov18Un25';
         update temp_age set group_amount = AGEU40 where group_name = 'Ov25Un40';
         update temp_age set group_amount = AGEU60 where group_name = 'Ov40Un60';
         update temp_age set group_amount = AGEO60 where group_name = 'Ov60';
--      ELSE
--        dbms_output.put_line('nie git');
--        execute immediate 'create table c##patryk.temp_age (age_group_id number(10), group_name varchar2(255), group_amount number)';
--      END IF;
else
    dbms_output.put_line('ERROR ERROR ERROR');
end if;
    

END AGE_CHART;

/
--------------------------------------------------------
--  DDL for Procedure CREATE_DEPARTMENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."CREATE_DEPARTMENT" 
(
    DEP_NAME IN VARCHAR2,
    DEP_EMAIL IN VARCHAR2,
    DEP_PHONE IN VARCHAR2
)
AS 
BEGIN
  INSERT INTO department (
      DEPARTMENT_NAME,
      DEPARTMENT_EMAIL,
      DEPARTMENT_PHONE
  ) VALUES (
      DEP_NAME,
      DEP_EMAIL,
      DEP_PHONE
  );
END CREATE_DEPARTMENT;

/
--------------------------------------------------------
--  DDL for Procedure CREATE_DOCTOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."CREATE_DOCTOR" 
(
  DOCTOR_FIRST_NAME IN VARCHAR2 
, DOCTOR_LAST_NAME IN VARCHAR2 
, DOCTOR_PESEL IN VARCHAR2 
, GENDER_ID IN NUMBER 
, DOCTOR_BIRTH_DATE IN DATE 
, DEPARTMENT_ID IN NUMBER 
, DOCTOR_PHONE IN VARCHAR2 
, DOCTOR_EMAIL IN VARCHAR2 
) AS 
BEGIN
    INSERT INTO DOCTOR (DOCTOR_FIRSTNAME,
DOCTOR_LASTNAME,
DOCTOR_PESEL,
GENDER_ID,
DOCTOR_BIRTHDATE,
DEPARTMENT_ID,
DOCTOR_PHONE,
DOCTOR_EMAIL) VALUES (DOCTOR_FIRST_NAME, DOCTOR_LAST_NAME, DOCTOR_PESEL, GENDER_ID, DOCTOR_BIRTH_DATE, DEPARTMENT_ID, DOCTOR_PHONE, DOCTOR_EMAIL);
  NULL;
END CREATE_DOCTOR;

/
--------------------------------------------------------
--  DDL for Procedure CREATE_EMPLOYEE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."CREATE_EMPLOYEE" AS 
BEGIN
  NULL;
END CREATE_EMPLOYEE;

/
--------------------------------------------------------
--  DDL for Procedure CREATE_MEDICINE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."CREATE_MEDICINE" (
  MEDICINE_NAME IN VARCHAR2, 
  MEDICINE_PRICE IN DECIMAL,
  REPLACEMENT_FOR IN NUMBER  
) IS

BEGIN
    INSERT INTO MEDICINE (MEDICINE_NAME, 
MEDICINE_PRICE, REPLACEMENT_FOR
) VALUES (MEDICINE_NAME, MEDICINE_PRICE, REPLACEMENT_FOR);
  NULL;
END CREATE_MEDICINE;

/
--------------------------------------------------------
--  DDL for Procedure CREATE_PATIENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."CREATE_PATIENT" 
(
    PAT_FIRSTNAME IN VARCHAR2,
    PAT_LASTNAME IN VARCHAR2,
    PAT_PESEL IN VARCHAR2,
    PAT_GENDER_ID IN NUMBER,
    PAT_BIRTHDATE IN DATE,
    PAT_PHONE IN VARCHAR2,
    PAT_EMAIL IN VARCHAR2
)
AS 
BEGIN
  INSERT INTO PATIENT (
    PATIENT_FIRSTNAME,
    PATIENT_LASTNAME,
    PATIENT_PESEL,
    GENDER_ID,
    PATIENT_BIRTHDATE,
    PATIENT_PHONE,
    PATIENT_EMAIL
) VALUES (
    PAT_FIRSTNAME,
    PAT_LASTNAME,
    PAT_PESEL,
    PAT_GENDER_ID,
    PAT_BIRTHDATE,
    PAT_PHONE,
    PAT_EMAIL
);
END CREATE_PATIENT;

/
--------------------------------------------------------
--  DDL for Procedure CREATE_PRESCRIPTION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."CREATE_PRESCRIPTION" 
(
    PRESCRIPTION_MEDICINE IN NUMBER,
    PRESCRIPTION_INSTRUCTIONS IN VARCHAR2
)
AS 
BEGIN

INSERT INTO prescription (
      MEDICINE_ID,
      INSTRUCTIONS
  ) VALUES (
    PRESCRIPTION_MEDICINE,
    PRESCRIPTION_INSTRUCTIONS
  );

  NULL;
END CREATE_PRESCRIPTION;

/
--------------------------------------------------------
--  DDL for Procedure CREATE_VISIT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."CREATE_VISIT" (
    V_TYPE IN NUMBER,
    V_SCHEDULED_DATE IN DATE,
    V_STATUS_ID IN NUMBER,
    V_RESCHEDULED_ID IN NUMBER,
    V_PATIENT_ID IN NUMBER,
    V_DOCTOR_ID IN NUMBER,
    V_EMPLOYEE_ID IN NUMBER,
    V_PRESCRIPTION_ID IN NUMBER
) AS 
BEGIN
  INSERT INTO visit ( 
    visit_type,
    register_date,
    scheduled_date,
    status_id,
    rescheduled_id,
    patient_id,
    doctor_id,
    employee_id,
    prescription_id
  ) VALUES (
    v_type,
    current_date,
    v_scheduled_date,
    v_status_id,
    v_rescheduled_id,
    v_patient_id,
    v_doctor_id,
    v_employee_id,
    v_prescription_id
    );
    UPDATE_VISIT_WITH_PRESC;
END CREATE_VISIT;

/
--------------------------------------------------------
--  DDL for Procedure EVERYROWINFO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."EVERYROWINFO" AS 
    v1 patient%ROWTYPE;
    CURSOR c_v1 IS SELECT * FROM patient ORDER BY patient_lastname;    
BEGIN
    for v1 in c_v1 LOOP
        NULL;
    END LOOP;
    DBMS_OUTPUT.PUT_LINE('Last row selected has ID ' || v1.patient_id || ' and name '||v1.patient_firstname||' '||v1.patient_lastname);
    
END EVERYROWINFO;

/
--------------------------------------------------------
--  DDL for Procedure INSERT_GENDER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."INSERT_GENDER" 
(
  GENDERNAME IN VARCHAR2 
) AS 
BEGIN
    INSERT INTO GENDER (gender_name) VALUES (GENDERNAME); 
  NULL;
END INSERT_GENDER;

/
--------------------------------------------------------
--  DDL for Procedure MONTHLY_AVG_PRESC_PRICE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."MONTHLY_AVG_PRESC_PRICE" 
(
--    monthly_visits OUT SYS_REFCURSOR,
--    monthly_presc_price OUT SYS_REFCURSOR,
    scope_to_year IN Number
)
AS
L_FINAL_RESULT NUMBER(38,2);

CURSOR c_v1 IS select to_char(scheduled_date, 'MM') as miesiac, count(*) as visits
    FROM 
    visit 
    INNER JOIN status on visit.status_id = status.status_id
WHERE
    extract(YEAR from register_date) = scope_to_year
    AND visit.rescheduled_id IS NULL
GROUP BY
    to_char(scheduled_date, 'MM');
    
CURSOR c_v2 IS SELECT SUM(medicine.medicine_price) AS sum_medicine_price,
    TO_CHAR(visit.scheduled_date, 'MM') AS miesiac
FROM
    visit
    INNER JOIN prescription ON visit.prescription_id = prescription.prescription_id
    INNER JOIN medicine ON prescription.medicine_id = medicine.medicine_id
WHERE
    prescription.prescription_id IS NOT NULL 
    AND extract(YEAR from register_date) = scope_to_year
GROUP BY
    TO_CHAR(visit.scheduled_date, 'MM');
    

       
BEGIN

EXECUTE IMMEDIATE 'DELETE FROM MONTHLY_PRESC_AVG_PRICE';
    L_FINAL_RESULT:= MONTH_NUMS_FILL_AVG_PRESC();
    if (L_FINAL_RESULT = 1) THEN --wynik funkcji month_nums_fill() jest przekazywany do zmiennej i determinuje wykonanie dalszych operacji     

        for record in c_v1 LOOP
            update MONTHLY_PRESC_AVG_PRICE set MONTHLY_VISITS = record.visits where MONTHLY_PRESC_AVG_PRICE.month_name = record.miesiac;
        END LOOP;
        
        for record in c_v2 LOOP
            update MONTHLY_PRESC_AVG_PRICE set MONTHLY_SUM_PRICE = record.sum_medicine_price where MONTHLY_PRESC_AVG_PRICE.month_name = record.miesiac;
        END LOOP;
        
        for row in c_v2 LOOP
            if (row.sum_medicine_price is not null) then
                update MONTHLY_PRESC_AVG_PRICE set MONTHLY_AVG_PRICE = MONTHLY_SUM_PRICE/MONTHLY_VISITS;
            else
                dbms_output.put_line('ERROR DZIELENIA SUMY PRZEZ WIZYTY');
            END IF;
        END LOOP;
        
    else
        dbms_output.put_line('ERROR ERROR ERROR');
    end if;

  NULL;
END MONTHLY_AVG_PRESC_PRICE;

/
--------------------------------------------------------
--  DDL for Procedure MONTHLY_REGISTERED_VISITS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."MONTHLY_REGISTERED_VISITS" 
(
    monthly_visits OUT SYS_REFCURSOR
)
AS 
BEGIN
    open monthly_visits for
    select to_char(register_date, 'MONTH') as miesiac, count(*) as wszystkie_wizyty
    from visit
    inner join patient on visit.patient_id = patient.patient_id 
    inner join gender on patient.gender_id = gender.gender_id
    group by to_char(register_date, 'MONTH');
    

END MONTHLY_REGISTERED_VISITS;

/
--------------------------------------------------------
--  DDL for Procedure MONTHLY_VISIT_SUMMARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."MONTHLY_VISIT_SUMMARY" 
(
    monthly_visits OUT SYS_REFCURSOR,
    monthly_skipped_due_to_patient OUT SYS_REFCURSOR,
    monthly_skipped_due_to_doctor OUT SYS_REFCURSOR,
    scope_to_year IN Number
)
AS
L_FINAL_RESULT NUMBER(38,2);
v1 visit%ROWTYPE;
v2 visit%ROWTYPE;
v3 visit%ROWTYPE;
r_cnt number;
m_exists number;


--kursor zawierajacy w sobie dane wszystkich zarejestrowanych wizyt
CURSOR c_v1 IS select to_char(register_date, 'MM') as miesiac, count(*) as visits
    from visit 
    inner join status on visit.status_id = status.status_id
    where extract(YEAR from register_date) = scope_to_year
    group by to_char(register_date, 'MM');    
    
--kursor zawierajacy w sobie dane wszystkich wizyt przelozonych przez pacjentow
CURSOR c_v2 IS select to_char(register_date, 'MM') as miesiac, count(*) as visits
    from visit
    inner join status on visit.status_id = status.status_id
    where visit.status_id in (2,3) AND extract(YEAR from register_date) = scope_to_year
    group by to_char(register_date, 'MM'); 
    
--kursor zawierajacy w sobie dane wszystkich wizyt przelozonych przez lekarzy   
CURSOR c_v3 IS select to_char(register_date, 'MM') as miesiac, count(*) as visits
    from visit
    inner join status on visit.status_id = status.status_id
    where visit.status_id in (4,5) AND extract(YEAR from register_date) = scope_to_year
    group by to_char(register_date, 'MM');    

 
BEGIN
    --wyczyszczenie zawartosci tablicy zawierajacej dane o wizytach, ktore nastepnie zostaja wczytane do wykresu
    EXECUTE IMMEDIATE 'DELETE FROM VISIT_SUMMARY';
    L_FINAL_RESULT:= month_nums_fill();
    if (L_FINAL_RESULT = 1) THEN --wynik funkcji month_nums_fill() jest przekazywany do zmiennej i determinuje wykonanie dalszych operacji     
        open monthly_visits for
        select trim(to_char(register_date, 'MM')) as miesiac, count(*) as visits
        from visit
        inner join status on visit.status_id = status.status_id
        group by to_char(register_date, 'MM');
        
        select count(month_name) into r_cnt from VISIT_SUMMARY;
        for v1 in c_v1 LOOP
        if (r_cnt > 0) then
            update VISIT_SUMMARY set visits_overall = v1.visits where VISIT_SUMMARY.month_name = v1.miesiac;
        else
            insert into VISIT_SUMMARY (month_name, visits_overall) values (v1.miesiac, v1.visits);       
        end if;    
        END LOOP;    
        
        
        open monthly_skipped_due_to_patient for
        select to_char(register_date, 'MM') as miesiac, count(*) as visits
        from visit
        inner join status on visit.status_id = status.status_id
        where visit.status_id in (2,3)
        group by to_char(register_date, 'MM');
        
        for v2 in c_v2 LOOP
            update VISIT_SUMMARY set visits_skpd_patient = v2.visits where VISIT_SUMMARY.month_name = v2.miesiac;
        END LOOP;
        
        open monthly_skipped_due_to_doctor for
        select to_char(register_date, 'MM') as miesiac, count(*) as visits
        from visit
        inner join status on visit.status_id = status.status_id
        where visit.status_id in (4,5)
        group by to_char(register_date, 'MM');       
        
        for v3 in c_v3 LOOP
            update VISIT_SUMMARY set visits_skpd_doctor = v3.visits where VISIT_SUMMARY.month_name = v3.miesiac;        
        END LOOP;
        else
            dbms_output.put_line('ERROR ERROR ERROR');
        end if;
    

END MONTHLY_VISIT_SUMMARY;

/
--------------------------------------------------------
--  DDL for Procedure MONTHS_FILL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."MONTHS_FILL" AS 
    r_cnt number;
    TYPE months_table IS TABLE OF VARCHAR2(70);
    months_nums months_table := months_table('01','02','03','04','05','06','07','08','09','10','11','12');
BEGIN
select count(month_name) into r_cnt from VISIT_SUMMARY;
    if (r_cnt = 0) then
        FOR i IN months_nums.first .. months_nums.last LOOP
            insert into VISIT_SUMMARY (month_name) values (months_nums(i));
            END LOOP;
    else 
        dbms_output.put_line('ERROR');
END IF;
END MONTHS_FILL;

--        insert into temp (month_name) values ('01');
--        insert into temp (month_name) values ('02');
--        insert into temp (month_name) values ('03');
--        insert into temp (month_name) values ('04');
--        insert into temp (month_name) values ('05');
--        insert into temp (month_name) values ('06');
--        insert into temp (month_name) values ('07');
--        insert into temp (month_name) values ('08');
--        insert into temp (month_name) values ('09');
--        insert into temp (month_name) values ('10');
--        insert into temp (month_name) values ('11');
--        insert into temp (month_name) values ('12');

/
--------------------------------------------------------
--  DDL for Procedure MOST_PRESCRIBED_MEDICINE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."MOST_PRESCRIBED_MEDICINE" 
(
    scope_to_year IN Number
)
AS 
L_FINAL_RESULT NUMBER(38,2);

CURSOR c_v1 IS SELECT COUNT(medicine.medicine_name) AS sum_medicine_amount,
    TO_CHAR(visit.scheduled_date, 'MM') AS miesiac,
    medicine.medicine_name
FROM
    visit
    INNER JOIN prescription ON visit.prescription_id = prescription.prescription_id
    INNER JOIN medicine ON prescription.medicine_id = medicine.medicine_id
WHERE
    prescription.prescription_id IS NOT NULL
    AND extract(YEAR from scheduled_date) = scope_to_year
GROUP BY
    TO_CHAR(visit.scheduled_date, 'MM'),
    medicine.medicine_name
ORDER BY
    TO_CHAR(visit.scheduled_date, 'MM') asc,
    count(medicine.medicine_name) asc,
    medicine.medicine_name asc;

BEGIN
    
EXECUTE IMMEDIATE 'DELETE FROM MOST_PRESC_MEDICINE_MONTHLY';
    L_FINAL_RESULT:= MONTH_NUMS_FL_MO_PRESC_MED();
    if (L_FINAL_RESULT = 1) THEN --wynik funkcji month_nums_fill() jest przekazywany do zmiennej i determinuje wykonanie dalszych operacji
    for  i in 1..12 LOOP
        update MOST_PRESC_MEDICINE_MONTHLY set MEDICINE_NAME = '.', MEDICINE_AMOUNT = 0;
        END LOOP;
        for record in c_v1 LOOP
            dbms_output.put_line('Lek: '||record.medicine_name || ' ilosc: '||record.sum_medicine_amount);            
            update MOST_PRESC_MEDICINE_MONTHLY set MEDICINE_NAME = record.medicine_name, MEDICINE_AMOUNT = record.sum_medicine_amount where MOST_PRESC_MEDICINE_MONTHLY.month_name = record.miesiac;
            
        END LOOP;
    else
        dbms_output.put_line('ERROR ERROR ERROR');
    end if;
  NULL;
END MOST_PRESCRIBED_MEDICINE;

/
--------------------------------------------------------
--  DDL for Procedure ORIGINALS_AND_REPLACEMENTS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."ORIGINALS_AND_REPLACEMENTS" 
(
--medicineWithReplacement OUT Number,
--medicineReplacement OUT Number,
--medicineWithoutReplacement OUT Number,
scope_to_year IN Varchar2
)
AS
r_cnt number;
medicineWithReplacement number;
medicineReplacement number;
medicineWithoutReplacement number;

BEGIN


--/leki ktore posiadaja zamienniki i zostaly zapisane w receptach
SELECT 
    SUM(medicine.medicine_price) AS sum_medicine_price into medicineWithReplacement
FROM
    visit
    INNER JOIN prescription ON visit.prescription_id = prescription.prescription_id
    INNER JOIN medicine ON prescription.medicine_id = medicine.medicine_id
WHERE
    prescription.prescription_id IS NOT NULL
    AND extract(YEAR from scheduled_date) = scope_to_year
    AND medicine.medicine_id in (select replacement_for from medicine where replacement_for is not null);
    
--/zamienniki, ktore zostaly zapisane w receptach
SELECT
    SUM(medicine.medicine_price) AS sum_medicine_price into medicineReplacement
FROM
    visit
    INNER JOIN prescription ON visit.prescription_id = prescription.prescription_id
    INNER JOIN medicine ON prescription.medicine_id = medicine.medicine_id
WHERE
    prescription.prescription_id IS NOT NULL
    AND extract(YEAR from scheduled_date) = scope_to_year
    AND medicine.replacement_for is not null;
    
--/oryginaly bez zamiennikow
SELECT
    sum(medicine.medicine_price) AS sum_medicine_price into medicineWithoutReplacement
FROM
    visit
    INNER JOIN prescription ON visit.prescription_id = prescription.prescription_id
    INNER JOIN medicine ON prescription.medicine_id = medicine.medicine_id
WHERE
    visit.prescription_id IS NOT NULL
    AND replacement_for is null
    AND extract(YEAR from scheduled_date) = scope_to_year
    AND medicine.medicine_id not in (select replacement_for from medicine where replacement_for is not null);

    
    select count(*) into r_cnt from originals_replacements;
    if (r_cnt = 0) then
        insert into originals_replacements values (1, null, 'medicineWithReplacement');
        insert into originals_replacements values (2 ,null, 'medicineReplacement');
        insert into originals_replacements values (3 ,null, 'medicineWOutReplacement');
        dbms_output.put_line(r_cnt);
    else
        update originals_replacements set summed_price = medicineWithReplacement where id = 1;
        update originals_replacements set summed_price = medicineReplacement where id = 2;
        update originals_replacements set summed_price = medicineWithoutReplacement where id = 3;        
    end if;

END ORIGINALS_AND_REPLACEMENTS;

/
--------------------------------------------------------
--  DDL for Procedure ORIGINALS_REPLACEMENT_DIFF
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."ORIGINALS_REPLACEMENT_DIFF" 
(
    summary OUT SYS_REFCURSOR,
--    medicineWithReplacement OUT Number,
--    possibleMedicineReplacement OUT Number,
    scope_to_year IN Number
)
AS 
medicineWithReplacement number;
possibleMedicineReplacement number;
r_cnt number;
replaceableMedicineSum number;
possibleMedicineCost number;
diff number;
BEGIN

SELECT 
    SUM(medicine.medicine_price) AS sum_medicine_price into medicineWithReplacement
FROM
    visit
    INNER JOIN prescription ON visit.prescription_id = prescription.prescription_id
    INNER JOIN medicine ON prescription.medicine_id = medicine.medicine_id
WHERE
    prescription.prescription_id IS NOT NULL
    AND extract(YEAR from scheduled_date) = scope_to_year
    AND medicine.medicine_id in (select replacement_for from medicine where replacement_for is not null);
    
SELECT
    SUM(medicine.medicine_price) AS sum_medicine_price into possibleMedicineReplacement
FROM
    medicine
WHERE
    replacement_for in
(SELECT
    medicine.medicine_id    
FROM
    visit
    INNER JOIN prescription ON visit.prescription_id = prescription.prescription_id
    INNER JOIN medicine ON prescription.medicine_id = medicine.medicine_id
WHERE
    visit.prescription_id IS NOT NULL
    AND extract(YEAR from scheduled_date) = scope_to_year
    AND medicine.medicine_id in (select replacement_for from medicine where replacement_for is not null));
    
    replaceableMedicineSum := medicinewithreplacement;
    possibleMedicineCost := possiblemedicinereplacement;
    diff := replaceableMedicineSum - possibleMedicineCost;
    
    dbms_output.put_line(medicineWithReplacement);
    dbms_output.put_line(possibleMedicineReplacement);
    
    select count(*) into r_cnt from originals_replacements_diff;
    if (r_cnt = 0) then
        insert into originals_replacements_diff (id, medicine_type, summed_price) values (1, 'medicineWithReplacement' ,medicinewithreplacement);
        insert into originals_replacements_diff (id, medicine_type, summed_price) values (2, 'possibleMedicineReplacement', possiblemedicinereplacement);
    else
        update originals_replacements_diff set summed_price = medicineWithReplacement where id = 1;
        update originals_replacements_diff set summed_price = possiblemedicinereplacement where id = 2;
        update originals_replacements_diff set summary = 'Total price of prescribed originals that have replacement: ' || replaceablemedicinesum ||'. '||'Total price of 
possible medicine cost for patients if doctors prescribed replacement instead of original medicine (only this case is investigated): '|| possibleMedicineCost ||'. '||
'Summarized benefit (actually lesser expenditure) on bought medicine for patients calculated could have equal to: '|| diff ||'.' where id = 1;
    end if;
    
    open summary for
    SELECT * from originals_replacements_diff where id = 1;
    
  NULL;
END ORIGINALS_REPLACEMENT_DIFF;

/
--------------------------------------------------------
--  DDL for Procedure ORIG_REPL_RATIO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."ORIG_REPL_RATIO" 
(
    scope_to_year IN NUMBER
--    medicineWithReplacement OUT Number,
--    medicineReplacement OUT Number,
--    medicineWithoutReplacement OUT Number
)
AS 
r_cnt number;
medicineWithReplacement number;
medicineReplacement number;
medicineWithoutReplacement number;
BEGIN



--/leki ktore posiadaja zamienniki i zostaly zapisane w receptach
SELECT 
    count(medicine.medicine_price) AS sum_medicine_price into medicineWithReplacement
FROM
    visit
    INNER JOIN prescription ON visit.prescription_id = prescription.prescription_id
    INNER JOIN medicine ON prescription.medicine_id = medicine.medicine_id
WHERE
    prescription.prescription_id IS NOT NULL
    AND extract(YEAR from scheduled_date) = scope_to_year
    AND medicine.medicine_id in (select replacement_for from medicine where replacement_for is not null);
    
--/zamienniki, ktore zostaly zapisane w receptach
SELECT
    count(medicine.medicine_price) AS sum_medicine_price into medicineReplacement
FROM
    visit
    INNER JOIN prescription ON visit.prescription_id = prescription.prescription_id
    INNER JOIN medicine ON prescription.medicine_id = medicine.medicine_id
WHERE
    prescription.prescription_id IS NOT NULL
    AND extract(YEAR from scheduled_date) = scope_to_year
    AND medicine.replacement_for is not null;
    
--/oryginaly bez zamiennikow
SELECT
    count(medicine.medicine_price) AS sum_medicine_price into medicineWithoutReplacement
FROM
    visit
    INNER JOIN prescription ON visit.prescription_id = prescription.prescription_id
    INNER JOIN medicine ON prescription.medicine_id = medicine.medicine_id
WHERE
    visit.prescription_id IS NOT NULL
    AND replacement_for is null
    AND extract(YEAR from scheduled_date) = scope_to_year
    AND medicine.medicine_id not in (select replacement_for from medicine where replacement_for is not null);

    
    select count(*) into r_cnt from originals_replacements_amount;
    if (r_cnt = 0) then
        insert into originals_replacements_amount values (1,'Replaceable originals', medicineWithReplacement);
        insert into originals_replacements_amount values (2 ,'Replacement for originals', medicineReplacement);
        insert into originals_replacements_amount values (3 ,'Irreplaceable originals', medicineWithoutReplacement);
        dbms_output.put_line(r_cnt);
    else
        update originals_replacements_amount set column2 = medicineWithReplacement where id = 1;
        update originals_replacements_amount set column2 = medicineReplacement where id = 2;
        update originals_replacements_amount set column2 = medicineWithoutReplacement where id = 3;

        
    end if;
END ORIG_REPL_RATIO;

/
--------------------------------------------------------
--  DDL for Procedure PROCEDURE1
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."PROCEDURE1" AS
    emp_refcur      SYS_REFCURSOR;
    v_patientid     patient.patient_id%TYPE;
    v_patientname   patient.patient_lastname%TYPE; 
    count_missed number;
    count_overall number;
    count123 number;
BEGIN
    select count(visit.register_date) into count_missed from visit where rescheduled_id > 0 AND visit.patient_id = 1;
    select count(visit.register_date) into count_overall from visit where visit.patient_id = 1;
    count123 := count_missed/count_overall;
    open emp_refcur for 'SELECT patient_id, patient_lastname FROM patient WHERE patient_id = 1';
    dbms_output.put_line('pat_id    pat_lastname');
    dbms_output.put_line('------    ------------');
    LOOP
        fetch emp_refcur INTO v_patientid, v_patientname;
        EXIT when emp_refcur%NOTFOUND;
        DBMS_output.put_line(v_patientid || '         ' || v_patientname);
    END LOOP;
    CLOSE emp_refcur;
END PROCEDURE1;

/
--------------------------------------------------------
--  DDL for Procedure RESCHEDULED_VISITS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."RESCHEDULED_VISITS" 
(
    patients OUT SYS_REFCURSOR
)AS 

BEGIN
open patients for
select patient_lastname, count(visit.register_date) AS ilosc_przelozen from visit INNER JOIN patient ON visit.patient_id = patient.patient_id WHERE visit_id > 0 group by patient_lastname;



  
END RESCHEDULED_VISITS;

/
--------------------------------------------------------
--  DDL for Procedure RESCHEDULING_CURSOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."RESCHEDULING_CURSOR" 
(
    comm OUT varchar2
)
AS 
 TYPE patient_basic IS RECORD
(
    patient_id patient.patient_id%TYPE,
    first_name patient.patient_firstname%TYPE,
    last_name patient.patient_lastname%TYPE    
);
    count_missed number;
    count_overall number;
    v1 patient%ROWTYPE;
 CURSOR c_v1 IS select patient_id, patient_firstname, patient_lastname from patient ORDER BY patient_lastname;

 
BEGIN
    for v1 in c_v1 LOOP
        select count(visit.register_date) into count_missed from visit;
        select count(visit.register_date) into count_overall from visit;
    
    
        if (count_missed/count_overall > 0.6) then
            comm := 'Pacjent '||v1.patient_firstname||' '|| v1.patient_lastname || ' przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - II stopien ostrzezenia!!';
        elsif (count_missed/count_overall > 0.3 and count_missed/count_overall <= 0.6)  then
            comm := 'Pacjent '||v1.patient_firstname||' '|| v1.patient_lastname || ' przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - I stopien ostrzezenia!';
        elsif (count_missed/count_overall <= 0.3)  then
            comm := 'Pacjent '||v1.patient_firstname||' '||v1.patient_lastname || ' przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - akceptowalny poziom ';    
        else
            comm := 'ERROR';
        end if;
                
    END LOOP;
  NULL;
END RESCHEDULING_CURSOR;

/
--------------------------------------------------------
--  DDL for Procedure RESCHEDULING_EFFECT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."RESCHEDULING_EFFECT" 
(
--comm OUT varchar2,
--pat_id IN number,
patients OUT SYS_REFCURSOR
) AS
TYPE patient_basic IS RECORD
(
    patient_id patient.patient_id%TYPE,
    first_name patient.patient_firstname%TYPE,
    last_name patient.patient_lastname%TYPE    
);
    comm varchar2(255);
    v_pat1 patient_basic;
    ratio number;
	count_missed number;
    count_overall number;
    
BEGIN -- executable part starts here
ratio := count_missed/count_overall;
FOR patients in (select patient_id from patient) LOOP   
    select patient_id, patient_firstname, patient_lastname INTO v_pat1 from patient WHERE patient_id = patients.patient_id;
	select count(visit.register_date) into count_missed from visit where rescheduled_id > 0 AND visit.patient_id =patients.patient_id;
    select count(visit.register_date) into count_overall from visit where visit.patient_id = patients.patient_id;


	if (ratio > 0.6) then
		comm := 'Pacjent przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - II stopien ostrzezenia!!';
        update patient set patient_status = comm where patient_id = patients.patient_id;
    elsif (ratio > 0.3 and ratio <= 0.6)  then
		comm := 'Pacjent przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - I stopien ostrzezenia!';
        update patient set patient_status = comm where patient_id = patients.patient_id;
    elsif (ratio <= 0.3)  then
		comm := 'Pacjent przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - akceptowalny poziom ';    
        update patient set patient_status = comm where patient_id = patients.patient_id;
    else
        comm := 'ERROR';
	end if;
END LOOP;
open patients for
select patient_firstname as imie, patient_lastname as nazwisko, patient_pesel as PESEL, patient_status as status, ratio as ratio from patient where patient_status is not null order by count_missed/count_overall;

END;

/
--------------------------------------------------------
--  DDL for Procedure RESCHEDULING_STATUS_DOCTOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."RESCHEDULING_STATUS_DOCTOR" 
(
--comm OUT varchar2,
--pat_id IN number,
doctors OUT SYS_REFCURSOR
) AS
TYPE doctor_basic IS RECORD
(
    doctor_id doctor.doctor_id%TYPE
);
    comm varchar2(255);
    v_doc1 doctor_basic;
    ratio number(10,3);
	count_missed number;
    count_overall number;
    
BEGIN -- executable part starts here

FOR doctors in (select doctor_id from doctor) LOOP   
    select doctor_id INTO v_doc1 from doctor WHERE doctor_id = doctors.doctor_id;
	select count(visit.register_date) into count_missed from visit where rescheduled_id is not null AND status_id = 5  AND visit.doctor_id =v_doc1.doctor_id;
    select count(visit.register_date) into count_overall from visit where visit.doctor_id = v_doc1.doctor_id;
--    dbms_output.put_line('ID: ' || v_doc1.doctor_id || ' count_missed: '||count_missed|| ' count_overall' || count_overall);
    ratio := count_missed/ nullif(count_overall,0);
	if (ratio > 0.6) then
		comm := 'Ratio: ' ||ratio|| '. Lekarz bez uprzedzenia przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - II stopien ostrzezenia!!';
        update doctor set doctor_status = comm where doctor_id = v_doc1.doctor_id;
    elsif (ratio > 0.3 and ratio <= 0.6)  then
		comm := 'Ratio: ' ||ratio|| '. Lekarz bez uprzedzenia przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - I stopien ostrzezenia!';
        update doctor set doctor_status = comm where doctor_id = v_doc1.doctor_id;
    elsif (ratio <= 0.3)  then
		comm := 'Ratio: ' ||ratio|| '. Lekarz bez uprzedzenia przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - akceptowalny poziom ';    
        update doctor set doctor_status = comm where doctor_id = v_doc1.doctor_id;
    elsif (count_overall = 0) then
        comm := '';
        update doctor set doctor_status = comm where doctor_id = v_doc1.doctor_id;
    else
        comm := 'ERROR';
        update doctor set doctor_status = comm where doctor_id = doctors.doctor_id;
end if;
END LOOP;
open doctors for
select doctor_firstname as imie, doctor_lastname as nazwisko, doctor_pesel as PESEL, doctor_status as status from doctor;

END;

/
--------------------------------------------------------
--  DDL for Procedure RESCHEDULING_STATUS_PATIENTS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."RESCHEDULING_STATUS_PATIENTS" 
(
    patients OUT SYS_REFCURSOR
)
AS
TYPE patient_basic IS RECORD
(
    patient_id patient.patient_id%TYPE
);
    comm varchar2(255);
    v_pat1 patient_basic;
    ratio number(10,3);
	count_missed number;
    count_overall number;
    
BEGIN

FOR patients in (select patient_id from patient) LOOP   
    select patient_id INTO v_pat1 from patient WHERE patient_id = patients.patient_id;
	select count(visit.register_date) into count_missed from visit where rescheduled_id is not null AND status_id = 3 AND visit.patient_id =v_pat1.patient_id;
    select count(visit.register_date) into count_overall from visit where visit.patient_id = v_pat1.patient_id;

    ratio := count_missed/ nullif(count_overall,0);
	if (ratio > 0.6) then
		comm := 'Ratio: ' ||ratio|| '. Pacjent bez uprzedzenia przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - II stopien ostrzezenia!!';
        update patient set patient_status = comm where patient_id = v_pat1.patient_id;
    elsif (ratio > 0.3 and ratio <= 0.6)  then
		comm := 'Ratio: ' ||ratio|| '. Pacjent bez uprzedzenia przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - I stopien ostrzezenia!';
        update patient set patient_status = comm where patient_id = v_pat1.patient_id;
    elsif (ratio <= 0.3)  then
		comm := 'Ratio: ' ||ratio|| '. Pacjent bez uprzedzenia przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - akceptowalny poziom ';    
        update patient set patient_status = comm where patient_id = v_pat1.patient_id;
    else
        comm := 'PACJENT NIE USTALIL JESZCZE ZADNEJ WIZYTY';
        update patient set patient_status = comm where patient_id = patients.patient_id;
	end if;
END LOOP;
open patients for
select patient_firstname as imie, patient_lastname as nazwisko, patient_pesel as PESEL, patient_status as status from patient where patient_status is not null;

END;

/
--------------------------------------------------------
--  DDL for Procedure RESCHEDULING_VARRAY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."RESCHEDULING_VARRAY" 
(
    comm OUT varchar2
    
)
AS
 TYPE patient_basic IS RECORD
(
    patient_id patient.patient_id%TYPE,
    first_name patient.patient_firstname%TYPE,
    last_name patient.patient_lastname%TYPE    
);
TYPE newtable IS TABLE OF VARCHAR2(255) INDEX BY BINARY_INTEGER;

rescheduling newtable;
c_patient patient.patient_firstname%TYPE;
count_missed number;
count_overall number;

v_pat1 patient_basic;
BEGIN
for i in 1 .. 2 LOOP
select patient_id, patient_firstname, patient_lastname INTO v_pat1 from patient WHERE patient_id = i;
select count(visit.register_date) into count_missed from visit where rescheduled_id > 0 AND visit.patient_id = i;
select count(visit.register_date) into count_overall from visit where visit.patient_id = i;
    
    if (count_missed/count_overall > 0.6) then
		comm := 'Pacjent '||v_pat1.first_name||' '|| v_pat1.last_name || ' przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - II stopien ostrzezenia!!';
    elsif (count_missed/count_overall > 0.3 and count_missed/count_overall <= 0.6)  then
		comm := 'Pacjent '||v_pat1.first_name||' '|| v_pat1.last_name || ' przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - I stopien ostrzezenia!';
    elsif (count_missed/count_overall <= 0.3)  then
		comm := 'Pacjent '||v_pat1.first_name||' '|| v_pat1.last_name || ' przelozyl '|| count_missed||' wizyt(y) na '||count_overall||' zarejestrowane - akceptowalny poziom ';    
    else
        comm := 'ERROR';
	end if;
rescheduling(i) := comm;

END LOOP;

for i in 1 .. rescheduling.last LOOP
    dbms_output.put_line(rescheduling(i));
END LOOP;
END RESCHEDULING_VARRAY;

/
--------------------------------------------------------
--  DDL for Procedure TEST1
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."TEST1" AS 
    v1 patient%ROWTYPE;
    CURSOR c_v1 IS SELECT * FROM patient ORDER BY patient_lastname;    
    l_cnt number;
BEGIN
SELECT COUNT(*)
    INTO l_cnt
    FROM user_tables
    WHERE table_name = 'TEMP'; 
  IF( l_cnt > 0 )
  THEN
    for v1 in c_v1 LOOP
        insert into temp values (v1.patient_id, v1.patient_firstname, v1.patient_pesel);
    END LOOP;
ELSE
    dbms_output.put_line('ERROR');
END IF;
--    DBMS_OUTPUT.PUT_LINE('Last row selected has ID ' || v1.patient_id || ' and name '||v1.patient_firstname||' '||v1.patient_lastname);
    
END test1;

/
--------------------------------------------------------
--  DDL for Procedure UPDATE_VISIT_WITH_PRESC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "C##PATRYK"."UPDATE_VISIT_WITH_PRESC" AS 

vis_id visit.visit_id%TYPE;
vis_stat visit.status_id%TYPE;
presc_id visit.prescription_id%TYPE;
ajdi number;

BEGIN

SELECT visit.visit_id, visit.status_id, visit.prescription_id into vis_id, vis_stat, presc_id FROM visit where visit.visit_id = (select max(visit.visit_id) from visit);
SELECT prescription_id into ajdi from prescription where prescription_id = (select max(prescription.prescription_id) from prescription); 
dbms_output.put_line(vis_id);
dbms_output.put_line(vis_stat);
dbms_output.put_line(ajdi);

if (vis_stat = 1 AND presc_id is null) then
    update visit set visit.prescription_id = ajdi where visit_id = vis_id;
end if;
END UPDATE_VISIT_WITH_PRESC;

/
--------------------------------------------------------
--  DDL for Package PACKAGE_1
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "C##PATRYK"."PACKAGE_1" AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 

END PACKAGE_1;

/
--------------------------------------------------------
--  DDL for Function FILL_AGE_GRUPS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##PATRYK"."FILL_AGE_GRUPS" RETURN NUMBER AS 
    msg_finally NUMBER(38,2);
    r_cnt number;
    TYPE names_table IS TABLE OF VARCHAR2(70);
    group_names names_table := names_table('Under18','Ov18Un25','Ov25Un40','Ov40Un60','Ov60');
BEGIN
select count(group_name) into r_cnt from TEMP_AGE;
    if (r_cnt = 0) then
        FOR i IN group_names.first .. group_names.last LOOP
            insert into TEMP_AGE (group_name) values (group_names(i));
        END LOOP;
        msg_finally := 1;
    else 
        msg_finally := 0;
END IF;
  RETURN msg_finally;
END FILL_AGE_GRUPS;

/
--------------------------------------------------------
--  DDL for Function MONTH_NUMS_FILL
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##PATRYK"."MONTH_NUMS_FILL" RETURN NUMBER AS 
    msg_finally NUMBER(38,2);
    r_cnt number;
    TYPE months_table IS TABLE OF VARCHAR2(70);
    months_nums months_table := months_table('01','02','03','04','05','06','07','08','09','10','11','12');
BEGIN
select count(month_name) into r_cnt from VISIT_SUMMARY;
    if (r_cnt = 0) then
        FOR i IN months_nums.first .. months_nums.last LOOP
            insert into VISIT_SUMMARY (month_name) values (months_nums(i));
        END LOOP;
        msg_finally := 1;
    else 
        msg_finally := 0;
END IF;
  RETURN msg_finally;
END MONTH_NUMS_FILL;

/
--------------------------------------------------------
--  DDL for Function MONTH_NUMS_FILL_AVG_PRESC
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##PATRYK"."MONTH_NUMS_FILL_AVG_PRESC" RETURN NUMBER AS 
    msg_finally NUMBER(38,2);
    r_cnt number;
    TYPE months_table IS TABLE OF VARCHAR2(70);
    months_nums months_table := months_table('01','02','03','04','05','06','07','08','09','10','11','12');
BEGIN
select count(month_name) into r_cnt from MONTHLY_PRESC_AVG_PRICE;
    if (r_cnt = 0) then

        FOR i IN months_nums.first .. months_nums.last LOOP
            insert into MONTHLY_PRESC_AVG_PRICE (month_name) values (months_nums(i));
        END LOOP;
        msg_finally := 1;
    else 
        msg_finally := 0;
END IF;
  RETURN msg_finally;
END MONTH_NUMS_FILL_AVG_PRESC;

/
--------------------------------------------------------
--  DDL for Function MONTH_NUMS_FL_MO_PRESC_MED
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "C##PATRYK"."MONTH_NUMS_FL_MO_PRESC_MED" RETURN VARCHAR2 AS 
msg_finally NUMBER(38,2);
    r_cnt number;
    TYPE months_table IS TABLE OF VARCHAR2(70);
    months_nums months_table := months_table('01','02','03','04','05','06','07','08','09','10','11','12');
BEGIN
select count(month_name) into r_cnt from most_presc_medicine_monthly;
    if (r_cnt = 0) then
        FOR i IN months_nums.first .. months_nums.last LOOP
            insert into most_presc_medicine_monthly (month_name) values (months_nums(i));
        END LOOP;
        msg_finally := 1;
    else 
        msg_finally := 0;
END IF;
  RETURN msg_finally;
END MONTH_NUMS_FL_MO_PRESC_MED;

/
--------------------------------------------------------
--  Constraints for Table VISITTYPE
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."VISITTYPE" ADD PRIMARY KEY ("TYPE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PRESCRIPTION
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."PRESCRIPTION" ADD PRIMARY KEY ("PRESCRIPTION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DEPARTMENT
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."DEPARTMENT" ADD PRIMARY KEY ("DEPARTMENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table STATUS
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."STATUS" ADD PRIMARY KEY ("STATUS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table GENDER
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."GENDER" ADD PRIMARY KEY ("GENDER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EMPLOYEE
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."EMPLOYEE" ADD PRIMARY KEY ("EMPLOYEE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##PATRYK"."EMPLOYEE" MODIFY ("DEPARTMENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table VISIT
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."VISIT" ADD PRIMARY KEY ("VISIT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EMPLOYEEROLE
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."EMPLOYEEROLE" ADD PRIMARY KEY ("ROLE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MEDICINE
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."MEDICINE" ADD PRIMARY KEY ("MEDICINE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "C##PATRYK"."MEDICINE" MODIFY ("MEDICINE_NAME" NOT NULL ENABLE);
  ALTER TABLE "C##PATRYK"."MEDICINE" MODIFY ("MEDICINE_PRICE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PATIENT
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."PATIENT" ADD PRIMARY KEY ("PATIENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DOCTOR
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."DOCTOR" ADD PRIMARY KEY ("DOCTOR_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCTOR
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."DOCTOR" ADD CONSTRAINT "DOC_DEP" FOREIGN KEY ("DEPARTMENT_ID")
	  REFERENCES "C##PATRYK"."DEPARTMENT" ("DEPARTMENT_ID") ENABLE;
  ALTER TABLE "C##PATRYK"."DOCTOR" ADD CONSTRAINT "DOC_GENDER" FOREIGN KEY ("GENDER_ID")
	  REFERENCES "C##PATRYK"."GENDER" ("GENDER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EMPLOYEE
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."EMPLOYEE" ADD CONSTRAINT "EMP_DEP" FOREIGN KEY ("DEPARTMENT_ID")
	  REFERENCES "C##PATRYK"."DEPARTMENT" ("DEPARTMENT_ID") ENABLE;
  ALTER TABLE "C##PATRYK"."EMPLOYEE" ADD CONSTRAINT "EMP_GENDER" FOREIGN KEY ("GENDER_ID")
	  REFERENCES "C##PATRYK"."GENDER" ("GENDER_ID") ENABLE;
  ALTER TABLE "C##PATRYK"."EMPLOYEE" ADD CONSTRAINT "EMP_ROLE" FOREIGN KEY ("ROLE_ID")
	  REFERENCES "C##PATRYK"."EMPLOYEEROLE" ("ROLE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MEDICINE
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."MEDICINE" ADD CONSTRAINT "REPLACEMENT_MEDICINE_REFERENCE" FOREIGN KEY ("REPLACEMENT_FOR")
	  REFERENCES "C##PATRYK"."MEDICINE" ("MEDICINE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PATIENT
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."PATIENT" ADD CONSTRAINT "PAT_GENDER" FOREIGN KEY ("GENDER_ID")
	  REFERENCES "C##PATRYK"."GENDER" ("GENDER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PRESCRIPTION
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."PRESCRIPTION" ADD CONSTRAINT "PRESC_MEDICINE" FOREIGN KEY ("MEDICINE_ID")
	  REFERENCES "C##PATRYK"."MEDICINE" ("MEDICINE_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VISIT
--------------------------------------------------------

  ALTER TABLE "C##PATRYK"."VISIT" ADD CONSTRAINT "VIS_DOC" FOREIGN KEY ("DOCTOR_ID")
	  REFERENCES "C##PATRYK"."DOCTOR" ("DOCTOR_ID") ENABLE;
  ALTER TABLE "C##PATRYK"."VISIT" ADD CONSTRAINT "VIS_EMP" FOREIGN KEY ("EMPLOYEE_ID")
	  REFERENCES "C##PATRYK"."EMPLOYEE" ("EMPLOYEE_ID") ENABLE;
  ALTER TABLE "C##PATRYK"."VISIT" ADD CONSTRAINT "VIS_PAT" FOREIGN KEY ("PATIENT_ID")
	  REFERENCES "C##PATRYK"."PATIENT" ("PATIENT_ID") ENABLE;
  ALTER TABLE "C##PATRYK"."VISIT" ADD CONSTRAINT "VIS_PRESC" FOREIGN KEY ("PRESCRIPTION_ID")
	  REFERENCES "C##PATRYK"."PRESCRIPTION" ("PRESCRIPTION_ID") ENABLE;
  ALTER TABLE "C##PATRYK"."VISIT" ADD CONSTRAINT "VIS_RESCH" FOREIGN KEY ("RESCHEDULED_ID")
	  REFERENCES "C##PATRYK"."VISIT" ("VISIT_ID") ENABLE;
  ALTER TABLE "C##PATRYK"."VISIT" ADD CONSTRAINT "VIS_STATUS" FOREIGN KEY ("STATUS_ID")
	  REFERENCES "C##PATRYK"."STATUS" ("STATUS_ID") ENABLE;
  ALTER TABLE "C##PATRYK"."VISIT" ADD CONSTRAINT "VIS_TYPE" FOREIGN KEY ("VISIT_TYPE")
	  REFERENCES "C##PATRYK"."VISITTYPE" ("TYPE_ID") ENABLE;
